{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/jiehoonn/NBA-Player-Predictions/schemas/experiment_results_schema.json",
  "title": "Experiment Results Schema",
  "description": "JSON schema for NBA data scale experiment results",
  "type": "object",
  "required": [
    "experiment",
    "config",
    "data_stats",
    "models",
    "execution_time",
    "status",
    "_metadata"
  ],
  "properties": {
    "experiment": {
      "type": "string",
      "pattern": "^EXP_",
      "description": "Experiment identifier (e.g., EXP_60P, EXP_90P)"
    },
    "config": {
      "type": "object",
      "required": ["name", "players", "seasons", "description"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable experiment name"
        },
        "players": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "NBA player ID"
          },
          "minItems": 1,
          "description": "List of player IDs included in experiment"
        },
        "seasons": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{2}$"
          },
          "minItems": 1,
          "description": "NBA seasons included (e.g., '2023-24')"
        },
        "description": {
          "type": "string",
          "description": "Experiment description and rationale"
        }
      }
    },
    "data_stats": {
      "type": "object",
      "required": ["total_games", "train_games", "val_games", "test_games", "num_players"],
      "properties": {
        "total_games": {
          "type": "integer",
          "minimum": 0,
          "description": "Total game records after filtering"
        },
        "train_games": {
          "type": "integer",
          "minimum": 0,
          "description": "Training split size"
        },
        "val_games": {
          "type": "integer",
          "minimum": 0,
          "description": "Validation split size"
        },
        "test_games": {
          "type": "integer",
          "minimum": 0,
          "description": "Test split size"
        },
        "num_players": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of unique players"
        }
      }
    },
    "models": {
      "type": "object",
      "required": ["PTS", "REB", "AST"],
      "properties": {
        "PTS": {
          "$ref": "#/definitions/modelResult"
        },
        "REB": {
          "$ref": "#/definitions/modelResult"
        },
        "AST": {
          "$ref": "#/definitions/modelResult"
        }
      }
    },
    "execution_time": {
      "type": "number",
      "minimum": 0,
      "description": "Total experiment execution time in seconds"
    },
    "status": {
      "type": "string",
      "enum": ["success", "failed", "partial"],
      "description": "Experiment completion status"
    },
    "_metadata": {
      "type": "object",
      "required": ["created_at", "schema_version", "experiment_id", "random_seed"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of experiment execution"
        },
        "schema_version": {
          "type": "string",
          "description": "Schema version for this results file"
        },
        "experiment_id": {
          "type": "string",
          "description": "Unique experiment identifier"
        },
        "random_seed": {
          "type": "integer",
          "description": "Random seed for reproducibility"
        },
        "experiment_type": {
          "type": "string",
          "enum": ["data_scale_player_count", "data_scale_seasons", "feature_ablation", "hyperparameter_tuning"],
          "description": "Type of experiment conducted"
        },
        "hypothesis": {
          "type": "string",
          "description": "Research hypothesis being tested"
        },
        "features_used": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of features in this experiment"
        },
        "feature_set": {
          "type": "string",
          "description": "Feature set identifier"
        },
        "comparison_baseline": {
          "type": "string",
          "description": "Baseline experiment ID for comparison"
        },
        "training_script": {
          "type": "string",
          "description": "Script or notebook used to run experiment"
        },
        "data_source": {
          "type": "string",
          "description": "Path to source data file"
        },
        "notes": {
          "type": "string",
          "description": "Additional experiment notes"
        },
        "git_commit": {
          "type": "string",
          "pattern": "^[a-f0-9]{40}$",
          "description": "Git commit hash for code versioning"
        }
      }
    }
  },
  "definitions": {
    "modelResult": {
      "type": "object",
      "required": ["model_name", "test_mae", "baseline_mae", "improvement_pct"],
      "properties": {
        "model_name": {
          "type": "string",
          "description": "Model type (Lasso or XGBoost)"
        },
        "train_mae": {
          "type": "number",
          "minimum": 0,
          "description": "Training MAE"
        },
        "val_mae": {
          "type": "number",
          "minimum": 0,
          "description": "Validation MAE"
        },
        "test_mae": {
          "type": "number",
          "minimum": 0,
          "description": "Test MAE"
        },
        "baseline_mae": {
          "type": "number",
          "minimum": 0,
          "description": "Baseline MAE"
        },
        "improvement_pct": {
          "type": "number",
          "description": "Percentage improvement over baseline"
        },
        "train_rmse": {
          "type": "number",
          "minimum": 0
        },
        "val_rmse": {
          "type": "number",
          "minimum": 0
        },
        "test_rmse": {
          "type": "number",
          "minimum": 0
        },
        "train_r2": {
          "type": "number"
        },
        "val_r2": {
          "type": "number"
        },
        "test_r2": {
          "type": "number"
        }
      }
    }
  }
}
